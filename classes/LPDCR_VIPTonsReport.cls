/******************************************************************************
 * Class to hold the data for each Row of the VIP Points & Tons web service
 * response
 * 
 * @Author: Magnet 360
 * @Date: Jun 14, 2017 
 * @Jira: LPDCR-2029
 */
//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class LPDCR_VIPTonsReport 
    extends LPDCR_ContentCalloutResponse
{

    /* SQL FIELD MAPPINGS ACCORDING TO LAND O LAKES
    s_1 through s_12 are self-explanatory
	s_13 =>  Split Shipped Tons YTD
	s_14 => VIP Points YTD
	s_15 => Split Shipped Tons Past Year to Date
	s_16 => Split Shipped Tons Past Year Month
	s_17 => Split Shipped Tons Past Year
	s_18 => Split Shipped Tons Current Month to Date
	s_19 => VIP Points Past Year to Date
	s_20 => VIP Points Past Year Month
	s_21 => VIP Points Past Year
	s_22 => VIP Points Current Month
    */
    
    // The field string keys
    private static String AR_ACCOUNT_NUMBER_VAL     = 's_1';
    private static String AR_CUSTOMER_NAME_VAL      = 's_2';
    private static String FD1_ACCOUNT_NUMBER_VAL    = 's_3';
    private static String FD1_CUSTOMER_NAME_VAL     = 's_4';
    private static String LEVEL_3_ID_VAL            = 's_5';
    private static String LEVEL_3_NAME_VAL          = 's_6';
    private static String PRODUCT_NAME_VAL          = 's_7';
    private static String PRODUCT_ID_VAL            = 's_8';
    private static String SALES_TERRITORY_ID_VAL    = 's_9';
    private static String SALES_TERRITORY_NAME_VAL  = 's_10';
    private static String EMPLOYEE_NUMBER_VAL       = 's_11';
    private static String EMPLOYEE_NAME_VAL         = 's_12';
    private static String SHIPPED_TONS_YTD_VAL      = 's_13';
    private static String VIP_POINTS_YTD_VAL        = 's_14';
    private static String SHIPPED_TONS_PYTD_VAL     = 's_15';
    private static String SHIPPED_TONS_PYM_VAL      = 's_16';
    private static String SHIPPED_TONS_PY_VAL       = 's_17';
    private static String SHIPPED_TONS_CM_VAL       = 's_18';
    private static String VIP_POINTS_PYTD_VAL       = 's_19';
    private static String VIP_POINTS_PYM_VAL        = 's_20';
    private static String VIP_POINTS_PY_VAL         = 's_21';
    private static String VIP_POINTS_CM_VAL         = 's_22'; 
    

    public List<Row> row {get;set;} 
    
    public static void consumeObject(JSONParser parser) {
        Integer depth = 0;
        do {
            JSONToken curr = parser.getCurrentToken();
            if (curr == JSONToken.START_OBJECT || 
                curr == JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == JSONToken.END_OBJECT ||
                curr == JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }

    public class Column {
        public String name {get;set;} 
        public String value {get;set;} 

        public Column(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'value') {
                            value = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Column consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Row {
        public List<Column> column {get;set;} 
        
        public String ar_customer_number { get{ return ar_customer_number == null ? '' : ar_customer_number; } set; }
        public String ar_customer_name { get{ return ar_customer_name == null ? '' : ar_customer_name; } set; }
        public String fd1_customer_number { get{ return fd1_customer_number == null ? '' : fd1_customer_number; } set; }
        public String fd1_customer_name { get{ return fd1_customer_name == null ? '' : fd1_customer_name; } set; }
        public String level_3_id  { get{ return level_3_id == null ? '' : level_3_id; } set; }
        public String level_3_name { get{ return level_3_name == null ? '' : level_3_name; } set; }
        public String product_name { get{ return product_name == null ? '' : product_name; } set; }
        public String product_id  { get{ return product_id == null ? '' : product_id; } set; }
        public String sales_territory_id { get{ return sales_territory_id == null ? '' : sales_territory_id; } set; }
        public String sales_territory_name  { get{ return sales_territory_name == null ? '' : sales_territory_name; } set; }
        public String employee_number { get{ return employee_number == null ? '' : employee_number; } set; }
        public String employee_name  { get{ return employee_name == null ? '' : employee_name; } set; }
        
        public Decimal shipped_tons_ytd { get{ if(shipped_tons_ytd == null) shipped_tons_ytd = 0.00; return shipped_tons_ytd;} set; }
        public Decimal vip_points_ytd { get{ if(vip_points_ytd == null) vip_points_ytd = 0.00; return vip_points_ytd;} set; }
        public Decimal shipped_tons_pytd { get{ if(shipped_tons_pytd == null) shipped_tons_pytd = 0.00; return shipped_tons_pytd;} set; }
        public Decimal shipped_tons_pym { get{ if(shipped_tons_pym == null) shipped_tons_pym = 0.00; return shipped_tons_pym;} set; }
        public Decimal shipped_tons_py { get{ if(shipped_tons_py == null) shipped_tons_py = 0.00; return shipped_tons_py;} set; }
        public Decimal shipped_tons_cm { get{ if(shipped_tons_cm == null) shipped_tons_cm = 0.00; return shipped_tons_cm;} set; }
        public Decimal vip_points_pytd { get{ if(vip_points_pytd == null) vip_points_pytd = 0.00; return vip_points_pytd;} set; }
        public Decimal vip_points_pym { get{ if(vip_points_pym == null) vip_points_pym = 0.00; return vip_points_pym;} set; }
        public Decimal vip_points_py { get{ if(vip_points_py == null) vip_points_py = 0.00; return vip_points_py;} set; }
        public Decimal vip_points_cm { get{ if(vip_points_cm == null) vip_points_cm = 0.00; return vip_points_cm;} set; }
        
        
        public Decimal shipped_tons_ytd_variance { get{ return shipped_tons_ytd - shipped_tons_pytd;} set; }
        public Decimal shipped_tons_month_variance { get{ return shipped_tons_cm - shipped_tons_pym;} set; }
        
        public Decimal vip_points_pytd_variance { get{ return vip_points_ytd - vip_points_pytd;} set; }
        public Decimal vip_points_month_variance { get{ return vip_points_cm - vip_points_pym;} set; }
        
        public Row(JSONParser parser) 
        {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'column') {
                            column = new List<Column>();
                            while (parser.nextToken() != JSONToken.END_ARRAY) {
                                // column.add(new Column(parser));
                                Column l_column = new Column(parser);
                                                 // Assign the value to correct
                                                 // Row variable
			                    if( l_column.name == AR_ACCOUNT_NUMBER_VAL ) {
			                        this.ar_customer_number = l_column.value;
			                    }else if( l_column.name == AR_CUSTOMER_NAME_VAL ) {
			                        this.ar_customer_name = l_column.value;
			                    }else if( l_column.name == FD1_ACCOUNT_NUMBER_VAL ) {
                                    this.fd1_customer_number = l_column.value;
                                }else if( l_column.name == FD1_CUSTOMER_NAME_VAL ) {
                                    this.fd1_customer_name = l_column.value;
                                }else if( l_column.name == LEVEL_3_ID_VAL ) {
                                    this.level_3_id = l_column.value;
                                }else if( l_column.name == LEVEL_3_NAME_VAL ) {
                                    this.level_3_name = l_column.value;
                                }else if( l_column.name == PRODUCT_NAME_VAL ) {
                                    this.product_name = l_column.value;
                                }else if( l_column.name == PRODUCT_ID_VAL ) {
                                    this.product_id = l_column.value;
                                }else if( l_column.name == SALES_TERRITORY_ID_VAL ) {
                                    this.sales_territory_id = l_column.value;
                                }else if( l_column.name == SALES_TERRITORY_NAME_VAL ) {
                                    this.sales_territory_name = l_column.value;
                                }else if( l_column.name == EMPLOYEE_NUMBER_VAL ) {
                                    this.employee_number = l_column.value;
                                }else if( l_column.name == EMPLOYEE_NAME_VAL ) {
                                    this.employee_name = l_column.value;
                                }else if( l_column.name == SHIPPED_TONS_YTD_VAL ) {
                                    this.shipped_tons_ytd = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == VIP_POINTS_YTD_VAL ) {
                                    this.vip_points_ytd = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == SHIPPED_TONS_PYTD_VAL ) {
                                    this.shipped_tons_pytd = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == SHIPPED_TONS_PYM_VAL ) {
                                    this.shipped_tons_pym = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == SHIPPED_TONS_PY_VAL ) {
                                    this.shipped_tons_py = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == SHIPPED_TONS_CM_VAL ) {
                                    this.shipped_tons_cm = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == VIP_POINTS_PYTD_VAL ) {
                                    this.vip_points_pytd = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == VIP_POINTS_PYM_VAL ) {
                                    this.vip_points_pym = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == VIP_POINTS_PY_VAL ) {
                                    this.vip_points_py = getDecimalVal( l_column.value ) ;
                                }else if( l_column.name == VIP_POINTS_CM_VAL ) {
                                    this.vip_points_cm = getDecimalVal( l_column.value ) ;
                                }
                                
                            }// /END while( parser.nextToken() )
                        } else {
                            // System.debug(LoggingLevel.WARN, 'Row consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }// /END while( parser.nextToken() )
        }
    }

/******************************************************************************
 * Empty constructor used when error handling
 */    
    public 
    LPDCR_VIPTonsReport() 
    {
        this.success = true;
    }

/******************************************************************************
 * Constructor that accepts a JSONParser for the JSON string to build out the
 * the complete report structure
 */
    public LPDCR_VIPTonsReport(JSONParser parser) 
    {
        System.debug( 'START: LPDCR_VIPTonsReport.constructor()' );
        this.success = true;
        
        while (parser.nextToken() != JSONToken.END_OBJECT) 
        {
            if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != JSONToken.VALUE_NULL) {
                    if (text == 'row') {
                        row = new List<Row>();
                        while (parser.nextToken() != JSONToken.END_ARRAY) {
                            row.add(new Row(parser));
                        }
                    } else {
                        System.debug(LoggingLevel.WARN, 'LPDCR_VIPTonsReport consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }// /END while( parser.nextToken() )

        System.debug( 'END: LPDCR_VIPTonsReport.constructor()' );
    }

    public static LPDCR_VIPTonsReport parse(String json) 
    {    
        LPDCR_VIPTonsReport l_report;
        try
        {
                                                 // Check to see if the JSON
                                                 // string passed into the method
                                                 // is valid. If not, return an
                                                 // empty LPDCR_VIPTonsReport object
                                                 // Make sure the response is
                                                 // valid JSON
            if( ! json.startsWith( '{' ) )
            {
                json = null;
            }
            System.JSONParser l_parser = System.JSON.createParser(json);
            
            l_report = new LPDCR_VIPTonsReport( l_parser );
            l_report.success = true;
        }
        catch( Exception l_any )
        {
            System.debug( '*** ERROR: PARSING EXCEPTION OCCURRED ***' );     
            l_report = new LPDCR_VIPTonsReport();
            l_report.success = false;
            l_report.ex = l_any;    
        }
        
        return l_report;
    }

/******************************************************************************
 * Private utility method to return the decimal value from the field_value_map
 * and make sure that data exists for it
 */
    private static
    Decimal
    getDecimalVal( String a_key )
    {
        if( a_key != null )
        {
            try
            {
                return Decimal.valueOf( a_key ).setScale( 2 );
            }
            catch( Exception l_any )
            {
                System.debug( 'Exception: ' + l_any );
                return 0.00;
            }
        }
        else
        {
            System.debug( 'ELSE ' + a_key + ' is null. return 0.00 ');
            return 0.00;
        }
    } 
    
}// /END class